// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  username String
  email    String
  address  Json?
  phone    String
  website  String
  company  Json?
  Post     Post[]
  Todos    Todos[]
  Album    Album[]

  @@index([username], name: "user_username")
  @@index([email], name: "user_email")
  @@map("users")
}

model Post {
  id        Int       @id @default(autoincrement())
  owner     User      @relation(fields: [userId], references: [id])
  userId    Int
  title     String
  body      String
  comments  Comment[]
  deletedAt DateTime?


  @@index([userId], name: "post_user_id")
  @@index([deletedAt], name: "post_deleted_at")
  @@index([userId, deletedAt], name: "post_user_id_deleted_at")
  @@map("posts")
}

model Comment {
  id        Int       @id @default(autoincrement())
  post      Post      @relation(fields: [postId], references: [id])
  postId    Int
  name      String
  email     String
  body      String
  deletedAt DateTime?

  @@index([postId], name: "comment_post_id")
  @@index([deletedAt], name: "comment_deleted_at")
  @@index([postId, deletedAt], name: "comment_post_id_deleted_at")
  @@map("comments")
}

model Album {
  id     Int     @id @default(autoincrement())
  title  String
  userId Int
  owner  User    @relation(fields: [userId], references: [id])
  photo  Photo[]

  @@map("albums")
}

model Photo {
  id           Int    @id @default(autoincrement())
  title        String
  url          String
  thumbnailUrl String
  albumId      Int
  album        Album  @relation(fields: [albumId], references: [id])

  @@map("photos")
}

model Todos {
  id        Int     @id @default(autoincrement())
  userId    Int
  owner     User    @relation(fields: [userId], references: [id])
  completed Boolean @default(false)

  @@map("todos")
}
